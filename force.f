      SUBROUTINE FORCE
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'SIZES'
      PARAMETER (MORB22=MORB2*2, MAXOR2=MAXORB*2)
      COMMON /GEOVAR/ NVAR,LOC(2,MAXPAR),DUMY(MAXPAR)
      COMMON /GEOSYM/ NDEP,LOCPAR(200),IDEPFN(200),LOCDEP(200)
      COMMON /GEOKST/ NATOMS,LABELS(NUMATM),
     +NA(NUMATM),NB(NUMATM),NC(NUMATM)
      COMMON /FMATRX/ FMATRX(MAXHES)
      COMMON /KEYWRD/ KEYWRD
      COMMON /GRADNT/ GRAD(MAXPAR),GNORM
      COMMON /VECTOR/ CNORML(MORB22),FREQ(MAXOR2)
      COMMON /GEOM  / GEO(3,NUMATM)
***********************************************************************
*
*   FORCE CALCULATES THE FORCE CONSTANTS FOR THE MOLECULE, AND THE
*         VIBRATIONAL FREQUENCIES.  ISOTOPIC SUBSTITUTION IS ALLOWED.
*
***********************************************************************
      DIMENSION XPARAM(MAXPAR), GR(3,NUMATM), 
     +STORE(MAXHES), DELDIP(3,MAXPAR), TRDIP(3,MAXPAR)
     1,LOCOLD(2,MAXPAR),XPAROL(MAXPAR), COORD(3,NUMATM), REDMAS(MAXPAR)
      CHARACTER KEYWRD*80, KEYS(80)*1
      LOGICAL RESTRT, DIPOK, LINEAR, DEBUG
      EQUIVALENCE (GRAD(1), GR(1,1)), (KEYWRD,KEYS(1))
C
C TEST GEOMETRY TO SEE IF IT IS OPTIMISED
      TIME2=-1.D9
      CALL GMETRY(GEO,COORD)
      NVAR=0
      DO 10 I=2,NATOMS
          IF(LABELS(I).EQ.99) GOTO 10
          IF(I.EQ.2)ILIM=1
          IF(I.EQ.3)ILIM=2
          IF(I.GT.3)ILIM=3
          DO 13 J=1,ILIM
              NVAR=NVAR+1
              LOC(1,NVAR)=I
              LOC(2,NVAR)=J
13            XPARAM(NVAR)=GEO(J,I)
10    CONTINUE
C
C   IF A RESTART, THEN TSCF AND TDER WILL BE FAULTY, THEREFORE SET TO -1
C
      TSCF=-1.D0
      TDER=-1.D0
      DEBUG=(INDEX(KEYWRD,'DFORCE') .NE. 0)
      RESTRT=(INDEX(KEYWRD,'RESTART') .NE. 0)
      TIME1=SECOND()
      IF (RESTRT) THEN
C
C   CHECK TO SEE IF CALCULATION IS IN NLLSQ OR FORCE.
C
          IF(INDEX(KEYWRD,'NLLSQ') .NE. 0)GOTO 26
C
C   CALCULATION IS IN FORCE
C
          GOTO 24
      ENDIF
      CALL COMPFG( XPARAM, .TRUE., ESCF, .TRUE., GRAD, .FALSE.)
      WRITE(6,'(//10X,''HEAT OF FORMATION ='',F12.6,
     +'' KCALS/MOLE'')')ESCF
      TIME2=SECOND()
      TSCF=TIME2-TIME1
      CALL COMPFG( XPARAM, .TRUE., ESCF, .FALSE., GRAD, .TRUE.)
      TIME3=SECOND()
      TDER=TIME3-TIME2
      WRITE(6,'(//10X,''INTERNAL COORDINATE DERIVATIVES'',//3X,
     +''ATOM  AT. NO.''5X,''X'',12X,''Y'',12X,''Z'',/)')
      L=0
      IU=0
      DO 11 I=1,NATOMS
          IF(LABELS(I).EQ.99) GOTO 11
          L=L+1
          IL=IU+1
          IF(I .EQ. 1) IU=IL-1
          IF(I .EQ. 2) IU=IL
          IF(I .EQ. 3) IU=IL+1
          IF(I .GT. 3) IU=IL+2
          WRITE(6,'(2I6,F13.6,2F13.6)') L,LABELS(I),(GRAD(J),J=IL,IU)
  11  CONTINUE
C   TEST SUM OF GRADIENTS 
      GNORM=SQRT(DOT(GRAD,GRAD,NVAR))
      WRITE(6,'(//10X,''GRADIENT NORM ='',F13.7)') GNORM
      IF(GNORM.LT.5.D0) GOTO 28
          WRITE(6,'(///1X,''** GRADIENT IS TOO LARGE TO ALLOW '',
     +    ''FORCE MATRIX TO BE CALCULATED, (LIMIT=5) **'',//)')
      IF(INDEX(KEYWRD,' LET ') .NE. 0) GOTO 23
      WRITE(6,'(//10X,'' GEOMETRY WILL BE OPTIMISED FIRST'')')
  26     CALL NLLSQ(XPARAM,NVAR)
         CALL COMPFG( XPARAM, .TRUE., ESCF, .TRUE., GRAD, .TRUE.)
         CALL WRITE(TIME1,ESCF)
      WRITE(6,'(//10X,''GRADIENT NORM ='',F13.7)') GNORM
  28  CONTINUE
C
C NOW TO CALCULATE THE FORCE MATRIX
C
C CHECK OUT SYMMETRY
  23  CONTINUE
      IF(NDEP.GT.0) THEN
      WRITE(6,'(//10X,''SYMMETRY WAS SPECIFIED, BUT '',
     +''CANNOT BE USED HERE'')')
      NDEP=0
      ENDIF
      IF(INDEX(KEYWRD,'THERMO').NE.0 .AND.GNORM.GT.0.2D0) 
     +    WRITE(6,'(//30X,''**** WARNING ****'',//
     +10X,'' GRADIENT IS VERY LARGE FOR A THERMO CALCULATION'',/
     +10X,'' RESULTS ARE LIKELY TO BE INACCURATE IF THERE ARE'',/
     +10X,'' ANY LOW-LYING VIBRATIONS (LESS THAN ABOUT 400CM-1)'',/
     +10X,'' GRADIENT NORM SHOULD BE LESS THAN ABOUT 0.2 FOR THERMO'',//
     +10X,'' TO GIVE ACCURATE RESULTS'')')
      IF(TSCF.GT.0.D0) THEN
          WRITE(6,'(//10X,''TIME FOR SCF CALCULATION ='',F8.2)')TSCF
          WRITE(6,'(//10X,''TIME FOR DERIVATIVES     ='',F8.2)')TDER
      ENDIF
  24  CALL FMAT(GEO, FMATRX, TSCF, TDER, DELDIP,ESCF)
C
C   THE FORCE MATRIX IS PRINTED AS AN ATOM-ATOM MATRIX RATHER THAN 
C   AS A 3N*3N MATRIX, AS THE 3N MATRIX IS VERY CONFUSING!
C
      IJ=0
      IU=0
      NU=NVAR/3
      DO 34 I=1,NU
      IL=IU+1
      IU=IL+2
      IM1=I-1
      JU=0
      DO 36 J=1,IM1
      JL=JU+1
      JU=JL+2
      SUM=0.D0
      DO 35 II=IL,IU
      DO 35 JJ=JL,JU
  35  SUM=SUM+FMATRX((II*(II-1))/2+JJ)**2
      IJ=IJ+1
  36  STORE(IJ)=SQRT(SUM)
      IJ=IJ+1
  34  STORE(IJ)=SQRT(
     +FMATRX(((IL+0)*(IL+1))/2)**2+
     +FMATRX(((IL+1)*(IL+2))/2)**2+
     +FMATRX(((IL+2)*(IL+3))/2)**2+2.D0*(
     +FMATRX(((IL+1)*(IL+2))/2-1)**2+
     +FMATRX(((IL+2)*(IL+3))/2-2)**2+
     +FMATRX(((IL+2)*(IL+3))/2-1)**2))
      IF(DEBUG) THEN
      WRITE(6,'(//10X,'' FULL FORCE MATRIX, INVOKED BY "DEBUG"'')')
      CALL VECPRT(FMATRX,NVAR)
      ENDIF
      WRITE(6,'(//10X,'' FORCE MATRIX IN MILLIDYNES/ANGSTROM'')')
      CALL VECPRT(STORE,NU)
      L=(NVAR*(NVAR+1))/2
      DO 25 I=1,L
  25  STORE(I)=FMATRX(I)
      CALL HQRII(STORE,NVAR,NVAR,FREQ,CNORML)
      WRITE(6,'(//10X,''HEAT OF FORMATION ='',F12.6,
     +'' KCALS/MOLE'')')ESCF
      WRITE(6,'(//10X,''FORCE CONSTANTS IN MILLIDYNES/ANGSTROM''
     +,'' (= 10**5 DYNES/CM)'',/)')
      WRITE(6,'(8F10.5)')(FREQ(I),I=1,NVAR)
C CONVERT TO WIEGHTED FMAT
      WRITE(6,'(//10X,'' ASSOCIATED EIGENVECTORS'')')
      CALL MATOUT(CNORML,FREQ,NVAR,NVAR,NVAR)
      CALL FREQCY(FMATRX,FREQ,CNORML,REDMAS)
      SUMM=0.D0
      DO 40 I=1,NVAR
      DO 55 K=1,3
  55  GRAD(K)=0.D0
      DO 65 K=1,3
      SUM=0.D0
      DO 50 J=1,NVAR
  50  SUM=SUM+CNORML(J+(I-1)*NVAR)*DELDIP(K,J)
      SUMM=SUMM+ABS(SUM)
  65  TRDIP(K,I)=SUM
  40  CONTINUE
      DIPOK  =  (SUMM.GT.0.1D0) 
      IF(DIPOK) THEN
          WRITE(6,'(//10X,'' FREQUENCIES, REDUCED MASSES AND '',
     +''VIBRATIONAL DIPOLES''/)')
      ELSE
          WRITE(6,'(//10X,''      FREQUENCIES AND REDUCED MASSES ''/)')
      ENDIF
      NTO6=NVAR/6
      NREM6=NVAR-NTO6*6
      IINC1=-5
      IF (NTO6.LT.1) GO TO 100
      DO 90 I=1,NTO6
         WRITE (6,'(/)')
         IINC1=IINC1+6
         IINC2=IINC1+5
         WRITE (6,'(3X,''I'',10I10)') (J,J=IINC1,IINC2)
         WRITE (6,'('' FREQ(I)'',6F10.4,/)') (FREQ(J),J=IINC1,IINC2)
         WRITE (6,'('' MASS(I)'',6F10.5,/)') (REDMAS(J),J=IINC1,IINC2)
         IF(DIPOK) THEN
         WRITE (6,'('' DIPX(I)'',6F10.5)') (TRDIP(1,J),J=IINC1,IINC2)
         WRITE (6,'('' DIPY(I)'',6F10.5)') (TRDIP(2,J),J=IINC1,IINC2)
         WRITE (6,'('' DIPZ(I)'',6F10.5,/)') (TRDIP(3,J),J=IINC1,IINC2)
         WRITE (6,'('' DIPT(I)'',6F10.5)') 
     +   (SQRT(TRDIP(1,J)**2+TRDIP(2,J)**2+TRDIP(3,J)**2)
     1   ,J=IINC1,IINC2)
         ENDIF
  90  CONTINUE
  100 CONTINUE
      IF (NREM6.LT.1) GO TO 150
      WRITE (6,'(/)')
      IINC1=IINC1+6
      IINC2=IINC1+(NREM6-1)
         WRITE (6,'(3X,''I'',10I10)') (J,J=IINC1,IINC2)
         WRITE (6,'('' FREQ(I)'',6F10.4,/)') (FREQ(J),J=IINC1,IINC2)
         WRITE (6,'('' MASS(I)'',6F10.5,/)') (REDMAS(J),J=IINC1,IINC2)
         WRITE (6,'('' DIPX(I)'',6F10.5)') (TRDIP(1,J),J=IINC1,IINC2)
         WRITE (6,'('' DIPY(I)'',6F10.5)') (TRDIP(2,J),J=IINC1,IINC2)
         WRITE (6,'('' DIPZ(I)'',6F10.5,/)') (TRDIP(3,J),J=IINC1,IINC2)
         WRITE (6,'('' DIPT(I)'',6F10.5)') 
     +   (SQRT(TRDIP(1,J)**2+TRDIP(2,J)**2+TRDIP(3,J)**2)
     1   ,J=IINC1,IINC2)
  150 CONTINUE
      WRITE(6,'(//10X,'' NORMAL VECTORS'')')
      CALL MATOUT(CNORML,FREQ,NVAR,NVAR,NVAR)
      IF(INDEX(KEYWRD,'THERMO').NE.0) THEN
          CALL GMETRY(GEO,COORD)
          NUMAT=NVAR/3
          I=INDEX(KEYWRD,' ROT') 
          IF(I.NE.0) THEN
              SYM=READA(KEYWRD,I)
          ELSE
              SYM=1
          ENDIF
          CALL AXIS(COORD,NUMAT,A,B,C,WTMOL)
          LINEAR=(ABS(A*B*B) .LT. 1.D-10)
          I=INDEX(KEYWRD,' TRANS')
C
C   "I" IS GOING TO MARK THE BEGINNING OF THE GENUINE VIBRATIONS.
C
          IF(I.NE.0)THEN
              WRITE(6,'(//10X,''SYSTEM IS A TRANSITION STATE'')')
              I=8
          ELSE
              WRITE(6,'(//10X,''SYSTEM IS A GROUND STATE'')')
              I=7
          ENDIF
          IF (LINEAR) I=I-1
          CALL THERMO(A,B,C,LINEAR,SYM,WTMOL,FREQ(I),NVAR-I+1)
      ENDIF
      RETURN
      END
